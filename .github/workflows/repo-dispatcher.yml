#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# 描述: 使用 GitHub Actions 构建 OpenWrt
# 许可证: MIT
# 作者: P3TERX
# 博客: https://p3terx.com
#=================================================

# 工作流名称
name: Repo Dispatcher

# 触发工作流的事件
on: 
  # 当推送到 master 分支时触发（当前注释掉了）
  # push: 
  #   branches:
  #     - master
  # 定时任务，每天 18:30 触发（当前注释掉了）
  schedule:
    - cron: 30 18 * * *
  # 手动触发工作流，可输入参数
  workflow_dispatch:
    inputs:
      param:
        description: '参数'
        required: false
        default: ''

# 环境变量
env:
  # 从 GitHub 仓库的 secrets 中获取 TOKEN_KIDDIN9
  TOKEN_KIDDIN9: ${{ secrets.TOKEN_KIDDIN9 }}
  # 设置时区为亚洲/上海
  TZ: Asia/Shanghai

# 工作流中的作业
jobs:
  build:
    # 在最新的 Ubuntu 环境中运行
    runs-on: ubuntu-latest
    steps:
    - name: 检出代码
      # 使用 actions/checkout 动作检出仓库代码
      uses: actions/checkout@main

    - name: 取消正在运行的工作流
      # 使用 styfle/cancel-workflow-action 动作取消正在运行的工作流
      uses: styfle/cancel-workflow-action@main
      # 仅当输入参数中包含 'cw' 时执行此步骤
      if: contains(github.event.inputs.param, 'cw')
      with:
        # 取消所有工作流
        workflow_id: all
        # 使用 TOKEN_KIDDIN9 作为访问令牌
        access_token: ${{ secrets.TOKEN_KIDDIN9 }}

    - name: 加载 Settings.ini 文件
      run: |
        # 加载公共的 settings.ini 文件
        source "${GITHUB_WORKSPACE}/devices/common/settings.ini"
        # 如果存在特定目标的 settings.ini 文件，则加载该文件
        if [ -f "devices/${{matrix.target}}/settings.ini" ]; then
          source "${GITHUB_WORKSPACE}/devices/${{matrix.target}}/settings.ini"
        fi
        # 将 REPO_URL 和 REPO_BRANCH 变量添加到环境变量中
        echo "REPO_URL=${REPO_URL}" >> $GITHUB_ENV
        echo "REPO_BRANCH=${REPO_BRANCH}" >> $GITHUB_ENV

    - name: 触发软件包更新
      run: |
        # 获取 kiddin9/kwrt-packages 仓库最新工作流的创建时间
        gitdate=$(curl -H "Authorization: token ${{ secrets.TOKEN_KIDDIN9 }}" -s "https://api.github.com/repos/kiddin9/kwrt-packages/actions/runs" | jq -r '.workflow_runs[0].created_at')
        # 将时间转换为时间戳
        gitdate=$(date -d "$gitdate" +%s)
        # 获取当前时间的时间戳
        now=$(date -d "$(date)" +%s)
        # 如果最新工作流创建时间超过 2 分钟，则触发软件包更新
        if [[ $(expr $gitdate + 120) < $now ]]; then
        curl -X POST https://api.github.com/repos/kiddin9/kwrt-packages/dispatches \
        -H "Accept: application/vnd.github.everest-preview+json" \
        -H "Authorization: token ${{ secrets.TOKEN_KIDDIN9 }}" \
        --data '{"event_type": "update"}'
        fi

    - name: 触发编译
      run: |
        # 设置系统时区
        sudo timedatectl set-timezone "$TZ"
        # 定义需要触发编译的目标列表，这里只保留ramips_mt7621
        targets=(ramips_mt7621)
        # 遍历目标列表，触发每个目标的编译
        for target in "${targets[@]}"; do
          curl \
          -X POST https://api.github.com/repos/${{ github.repository }}/dispatches \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token ${{ secrets.TOKEN_KIDDIN9 }}" \
          -d '{"event_type": "'"${target}"' ${{ github.event.inputs.param }}", "client_payload": {"target": "'"${target}"'"}}'
        done
